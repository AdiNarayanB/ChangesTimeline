{"ast":null,"code":"var _jsxFileName = \"/home/adithya/empApp/client/empappviewer/src/components/ChangeList.js\";\nimport React from 'react';\nimport DepartmentChange from './Changes/DepartmentChange';\nimport LocationChange from './Changes/LocationChange';\nimport SalaryChange from './Changes/SalaryChange';\nimport TitleChange from './Changes/TitleChange';\nimport SupervisorChange from './Changes/SupervisorChange';\n// Import other change types as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangeList = ({\n  changes\n}) => {\n  const renderChange = change => {\n    switch (change.changeType) {\n      case 'department':\n        return /*#__PURE__*/_jsxDEV(DepartmentChange, {\n          change: change\n        }, change.created_at, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }, this);\n      case 'location':\n        return /*#__PURE__*/_jsxDEV(LocationChange, {\n          change: change\n        }, change.created_at, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 16\n        }, this);\n      case 'salary':\n        return /*#__PURE__*/_jsxDEV(SalaryChange, {\n          change: change\n        }, change.created_at, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }, this);\n      // Add other cases as needed for each change type\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"User:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 16\n            }, this), \" \", change.userid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Changed \", change.changeType, \" from \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: change.oldValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 49\n            }, this), \" to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: change.newValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 87\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 16\n            }, this), \" \", change.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, change.created_at, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Changes List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), changes.map(change => renderChange(change))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = ChangeList;\nexport default ChangeList;\nvar _c;\n$RefreshReg$(_c, \"ChangeList\");","map":{"version":3,"names":["React","DepartmentChange","LocationChange","SalaryChange","TitleChange","SupervisorChange","jsxDEV","_jsxDEV","ChangeList","changes","renderChange","change","changeType","created_at","fileName","_jsxFileName","lineNumber","columnNumber","className","children","userid","oldValue","newValue","map","_c","$RefreshReg$"],"sources":["/home/adithya/empApp/client/empappviewer/src/components/ChangeList.js"],"sourcesContent":["import React from 'react';\nimport DepartmentChange from './Changes/DepartmentChange';\nimport LocationChange from './Changes/LocationChange';\nimport SalaryChange from './Changes/SalaryChange';\nimport TitleChange from './Changes/TitleChange';\nimport SupervisorChange from './Changes/SupervisorChange';\n// Import other change types as needed\n\nconst ChangeList = ({ changes }) => {\n  const renderChange = (change) => {\n    switch (change.changeType) {\n      case 'department':\n        return <DepartmentChange key={change.created_at} change={change} />;\n      case 'location':\n        return <LocationChange key={change.created_at} change={change} />;\n      case 'salary':\n        return <SalaryChange key={change.created_at} change={change} />;\n      // Add other cases as needed for each change type\n      default:\n        return (\n          <div key={change.created_at} className=\"change-item\">\n            <p><strong>User:</strong> {change.userid}</p>\n            <p>Changed {change.changeType} from <strong>{change.oldValue}</strong> to <strong>{change.newValue}</strong></p>\n            <p><strong>Date:</strong> {change.created_at}</p>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div>\n      <h3>Changes List</h3>\n      {changes.map((change) => renderChange(change))}\n    </div>\n  );\n};\n\nexport default ChangeList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}